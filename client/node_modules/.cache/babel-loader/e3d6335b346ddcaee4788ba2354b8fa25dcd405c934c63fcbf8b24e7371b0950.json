{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  user: {\n    userID: \"\",\n    username: \"\"\n  },\n  serverURL: process.env.REACT_APP_SERVER_URL,\n  loading: false,\n  error: \"\"\n};\nexport const login = createAsyncThunk('user', async body => {\n  return axios.post(`${initialState.serverURL}/user/`, body).then(res => {\n    return res.data;\n  });\n});\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(login.fulfilled, (state, action) => {\n      console.log(action);\n      state.loading = false;\n      state = action.payload;\n      state.error = action.payload.error;\n    });\n    builder.addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.getUser = {\n        userID: \"\",\n        username: \"\"\n      };\n      state.error = action.error.message;\n    });\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","user","userID","username","serverURL","process","env","REACT_APP_SERVER_URL","loading","error","login","body","post","then","res","data","userSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","console","log","payload","rejected","getUser","message","reducer"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/features/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst initialState = {\r\n    user: {\r\n        userID: \"\",\r\n        username: \"\"\r\n    },\r\n    serverURL: process.env.REACT_APP_SERVER_URL,\r\n    loading: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const login = createAsyncThunk('user', async(body) =>{\r\n    return axios.post(`${initialState.serverURL}/user/`, body)\r\n    .then(res => {\r\n        return res.data})\r\n})\r\n\r\nconst userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    extraReducers: (builder) => {\r\n        builder.addCase(login.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(login.fulfilled, (state, action) => {\r\n            console.log(action)\r\n            state.loading = false\r\n            state = action.payload\r\n            state.error = action.payload.error\r\n        })\r\n        builder.addCase(login.rejected, (state, action) => {            state.loading = false\r\n            state.getUser = {\r\n                userID: \"\",\r\n                username: \"\"\r\n            }\r\n            state.error = action.error.message\r\n        })\r\n    }\r\n})\r\n\r\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;IACFC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACd,CAAC;EACDC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAC3CC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,KAAK,GAAGb,gBAAgB,CAAC,MAAM,EAAE,MAAMc,IAAI,IAAI;EACxD,OAAOZ,KAAK,CAACa,IAAI,CAAE,GAAEZ,YAAY,CAACI,SAAU,QAAO,EAAEO,IAAI,CAAC,CACzDE,IAAI,CAACC,GAAG,IAAI;IACT,OAAOA,GAAG,CAACC,IAAI;EAAA,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGlB,WAAW,CAAC;EAC1BmB,IAAI,EAAE,MAAM;EACZjB,YAAY;EACZkB,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACV,KAAK,CAACW,OAAO,EAAGC,KAAK,IAAK;MACtCA,KAAK,CAACd,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFW,OAAO,CAACC,OAAO,CAACV,KAAK,CAACa,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBF,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,GAAGE,MAAM,CAACG,OAAO;MACtBL,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACG,OAAO,CAAClB,KAAK;IACtC,CAAC,CAAC;IACFU,OAAO,CAACC,OAAO,CAACV,KAAK,CAACkB,QAAQ,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAAaF,KAAK,CAACd,OAAO,GAAG,KAAK;MACjFc,KAAK,CAACO,OAAO,GAAG;QACZ3B,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE;MACd,CAAC;MACDmB,KAAK,CAACb,KAAK,GAAGe,MAAM,CAACf,KAAK,CAACqB,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}