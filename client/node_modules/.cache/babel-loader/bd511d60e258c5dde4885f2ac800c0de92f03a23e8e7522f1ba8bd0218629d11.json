{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\-\\\\Documents\\\\Projects\\\\nexchapters\\\\src\\\\components\\\\NewManga.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getMangaList } from \"../features/manga/mangaSlice\";\nimport axios from \"axios\";\n\n// FUTURE PLAN: Auto populate manga when entering title\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewManga = props => {\n  _s();\n  const dispatch = useDispatch();\n  const [newManga, setNewManga] = useState({\n    title: '',\n    image: '',\n    link: '',\n    // totalChapters: null,\n    currentChapter: \"\",\n    userID: props.user.id\n  });\n  let [errorMessage, setErrorMessage] = useState('');\n\n  // List from mapping mangalist and grabing title\n  // const [mangaList, setMangaList] = useState(props.mangaList)\n\n  const imageStandBy = event => {\n    event.target.src = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n  };\n  const hideAddForm = () => {\n    setNewManga({\n      ...newManga,\n      title: '',\n      image: '',\n      link: '',\n      currentChapter: ''\n    });\n    setErrorMessage(\"\");\n    document.querySelector(\".containerAddManga\").style.cssText = `\n        opacity: 0;\n        visibility: hidden;\n        top: 100%;`;\n  };\n  const showAddForm = () => {\n    document.querySelector(\".containerAddManga\").style.cssText = `\n        opacity: 1;\n        visibility: visible;\n        top: 32%;`;\n  };\n\n  // Manga API call\n  // const url = 'https://api.jikan.moe/v4/manga';\n  // let queryTitle = \"naruto\"\n  // let query = `?q=${queryTitle}?order_by=\"rank`;\n\n  // const getAnime = () => {\n  //     fetch(url + query)\n  //     .then(res => res.json())\n  //     .then(mangaList => \n  //         // console.log(mangaList.data.map(\n  //         //     manga => {return {\n  //         //         'totalChapters': manga.chapters,\n  //         //         'titles': manga.titles[0],\n  //         //         'image': manga.images.webp.image_url\n  //         //     }}))\n  //         setMangaList(mangaList.data.map(\n  //                 manga => {return {\n  //                     'totalChapters': manga.chapters,\n  //                     'title': manga.titles[0].title,\n  //                     'image': manga.images.webp.image_url\n  //                 }}))\n  //         )\n  // }\n\n  const handleChange = event => {\n    setNewManga({\n      ...newManga,\n      [event.target.name]: event.target.value\n    });\n    if (event.target.name === 'image') {\n      document.querySelector('.formImageNewManga').src = event.target.value;\n    }\n  };\n  const handleAddManga = () => {\n    console.log(newManga);\n    for (const [key, value] of Object.entries(newManga)) {\n      if (value === \"\") {\n        setErrorMessage(\"All fields should not be empty.\");\n        return;\n      }\n    }\n    axios.post(`${props.serverURL}/manga/add`, newManga).then(res => res.data).then(() => {\n      setErrorMessage('add');\n      dispatch(getMangaList(newManga.userID));\n      hideAddForm();\n      setErrorMessage('');\n    }).catch(error => {\n      console.log(error.name);\n      setErrorMessage(error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerNewManga\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fi fi-rr-add btnAddNewManga\",\n      onClick: showAddForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerAddManga\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formNavTop\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"addTitle\",\n          children: \"Add New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fi fi-rr-rectangle-xmark\",\n          onClick: hideAddForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"\",\n        alt: \"new manga\",\n        onError: imageStandBy,\n        className: \"formImageNewManga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddManga,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          placeholder: \"title\",\n          onChange: handleChange,\n          value: newManga.title,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          placeholder: \"image link\",\n          onChange: handleChange,\n          value: newManga.image,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"link\",\n          placeholder: \"webiste link\",\n          onChange: handleChange,\n          value: newManga.link,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"currentChapter\",\n          placeholder: \"current chapter\",\n          onChange: handleChange,\n          value: newManga.currentChapter,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorMessage\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formNav\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"cancel\",\n            onClick: hideAddForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(NewManga, \"rs9Ohf569iSBvLSFHA0T06/NlL4=\", false, function () {\n  return [useDispatch];\n});\n_c = NewManga;\nexport default NewManga;\nvar _c;\n$RefreshReg$(_c, \"NewManga\");","map":{"version":3,"names":["useState","useDispatch","getMangaList","axios","jsxDEV","_jsxDEV","NewManga","props","_s","dispatch","newManga","setNewManga","title","image","link","currentChapter","userID","user","id","errorMessage","setErrorMessage","imageStandBy","event","target","src","hideAddForm","document","querySelector","style","cssText","showAddForm","handleChange","name","value","handleAddManga","console","log","key","Object","entries","post","serverURL","then","res","data","catch","error","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","alt","onError","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/components/NewManga.jsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { getMangaList } from \"../features/manga/mangaSlice\"\r\nimport axios from \"axios\";\r\n\r\n// FUTURE PLAN: Auto populate manga when entering title\r\nconst NewManga = (props) => {\r\n    const dispatch = useDispatch()\r\n    const [newManga, setNewManga] = useState({\r\n        title: '',\r\n        image: '',\r\n        link: '',\r\n        // totalChapters: null,\r\n        currentChapter: \"\",\r\n        userID: props.user.id\r\n    })\r\n    let [errorMessage, setErrorMessage] = useState('')\r\n\r\n    // List from mapping mangalist and grabing title\r\n    // const [mangaList, setMangaList] = useState(props.mangaList)\r\n\r\n    const imageStandBy = (event) => {\r\n        event.target.src = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\r\n    }\r\n    const hideAddForm = () => {\r\n        setNewManga({...newManga, \r\n            title: '',\r\n            image: '',\r\n            link: '',\r\n            currentChapter: '',\r\n        })\r\n        setErrorMessage(\"\")\r\n        document.querySelector(\".containerAddManga\").style.cssText = `\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        top: 100%;`;\r\n    }\r\n    const showAddForm = () => {\r\n        document.querySelector(\".containerAddManga\").style.cssText = `\r\n        opacity: 1;\r\n        visibility: visible;\r\n        top: 32%;`;\r\n    }\r\n\r\n    // Manga API call\r\n    // const url = 'https://api.jikan.moe/v4/manga';\r\n    // let queryTitle = \"naruto\"\r\n    // let query = `?q=${queryTitle}?order_by=\"rank`;\r\n\r\n    // const getAnime = () => {\r\n    //     fetch(url + query)\r\n    //     .then(res => res.json())\r\n    //     .then(mangaList => \r\n    //         // console.log(mangaList.data.map(\r\n    //         //     manga => {return {\r\n    //         //         'totalChapters': manga.chapters,\r\n    //         //         'titles': manga.titles[0],\r\n    //         //         'image': manga.images.webp.image_url\r\n    //         //     }}))\r\n    //         setMangaList(mangaList.data.map(\r\n    //                 manga => {return {\r\n    //                     'totalChapters': manga.chapters,\r\n    //                     'title': manga.titles[0].title,\r\n    //                     'image': manga.images.webp.image_url\r\n    //                 }}))\r\n    //         )\r\n    // }\r\n\r\n    const handleChange = (event) => {\r\n        setNewManga({...newManga, [event.target.name]: event.target.value})\r\n        if(event.target.name === 'image'){\r\n            document.querySelector('.formImageNewManga').src = event.target.value\r\n        }\r\n    }\r\n\r\n    const handleAddManga = () => {\r\n        \r\n        console.log(newManga)\r\n        for (const [key, value] of Object.entries(newManga)) {\r\n            if (value === \"\") {\r\n                setErrorMessage(\"All fields should not be empty.\")\r\n                return\r\n            }\r\n        }\r\n        axios.post(`${props.serverURL}/manga/add`,newManga).then(res => res.data)\r\n        .then(() => {\r\n            setErrorMessage('add')\r\n            dispatch(getMangaList(newManga.userID))\r\n            hideAddForm()\r\n            setErrorMessage('')\r\n        }).catch((error) => {\r\n            console.log(error.name)\r\n            setErrorMessage(error.message)}\r\n            )\r\n    }\r\n    return(\r\n        <div className=\"containerNewManga\">\r\n            <i className=\"fi fi-rr-add btnAddNewManga\" onClick={showAddForm}></i>\r\n            <div className=\"containerAddManga\">\r\n                <div className=\"formNavTop\">\r\n                    <p className=\"addTitle\">Add New</p>\r\n                    <i className=\"fi fi-rr-rectangle-xmark\" onClick={hideAddForm}></i>\r\n                </div>\r\n                <img src=\"\" alt=\"new manga\" onError={imageStandBy} className=\"formImageNewManga\"/>\r\n                <form onSubmit={handleAddManga}>\r\n                    {/* <label htmlFor=\"animeList\" className=\"animeList\">Anime List <select name=\"animeList\">\r\n                        {\r\n                            mangaList.map(manga => <option value={manga.title}>{manga.title}</option>)\r\n                        }\r\n                    </select></label> */}\r\n                    <input type=\"text\" name=\"title\" placeholder=\"title\" onChange={handleChange} value={newManga.title} required/>\r\n                    <input type=\"text\" name=\"image\" placeholder=\"image link\" onChange={handleChange} value={newManga.image} required/>\r\n                    <input type=\"text\" name=\"link\" placeholder=\"webiste link\" onChange={handleChange} value={newManga.link} required/>\r\n                    {/* <input type=\"number\" name=\"totalChapters\" placeholder=\"total chapters\"/> */}\r\n                    <input type=\"number\" name=\"currentChapter\" placeholder=\"current chapter\" onChange={handleChange} value={newManga.currentChapter} required/>\r\n                    <p className=\"errorMessage\">{errorMessage}</p>\r\n                    <div className=\"formNav\">  \r\n                            <span className=\"cancel\" onClick={hideAddForm}>cancel</span>\r\n                            <button className=\"submit\" >Submit</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewManga"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}