{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\-\\\\Documents\\\\Projects\\\\nexchapters\\\\src\\\\views\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\nimport { register } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [user, userLogin, error, handleChange] = useOutletContext();\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleLogin = event => {\n    event.preventDefault();\n    dispatch(register(userLogin));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: user.id ? setTimeout(() => {\n      navigate(\"/mangalist\");\n    }) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerLogin\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"formRegister\",\n        method: \"POST\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"username\",\n          className: \"input\",\n          name: \"username\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"pasword\",\n          className: \"input\",\n          name: \"password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loginError\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"buttonLogin\",\n          onClick: handleLogin,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(Register, \"tlSlC/iyKs7OwDFvmf1mMG3mAwY=\", false, function () {\n  return [useOutletContext, useNavigate, useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useDispatch","useNavigate","useOutletContext","register","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","user","userLogin","error","handleChange","navigate","dispatch","handleLogin","event","preventDefault","children","id","setTimeout","className","method","type","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/views/Register.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport { register } from \"../features/user/userSlice\";\r\n\r\nconst Register = () => {\r\n    const [user, userLogin, error, handleChange] = useOutletContext();\r\n    let navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault()\r\n        dispatch(register(userLogin))\r\n    }\r\n    return(<>\r\n        {\r\n            user.id \r\n            ? \r\n                setTimeout(() => {\r\n                    navigate(\"/mangalist\") \r\n                })\r\n            : \r\n                <div className=\"containerLogin\">\r\n                    <form className='formRegister' method='POST'>  \r\n                        <input type=\"text\" placeholder=\"username\" className='input' name='username' onChange={handleChange}/>\r\n                        <input type=\"password\" placeholder=\"pasword\" className='input' name='password' onChange={handleChange}/>\r\n                        <p className='loginError'>{error}</p>\r\n                        <a className=\"buttonLogin\" onClick={handleLogin}>Register</a>\r\n                    </form>\r\n                </div>\r\n        }\r\n    </>)\r\n}\r\n\r\nexport default Register"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,QAAQ,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,YAAY,CAAC,GAAGX,gBAAgB,EAAE;EACjE,IAAIY,QAAQ,GAAGb,WAAW,EAAE;EAC5B,MAAMc,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAMgB,WAAW,GAAIC,KAAK,IAAK;IAC3BA,KAAK,CAACC,cAAc,EAAE;IACtBH,QAAQ,CAACZ,QAAQ,CAACQ,SAAS,CAAC,CAAC;EACjC,CAAC;EACD,oBAAON,OAAA,CAAAE,SAAA;IAAAY,QAAA,EAECT,IAAI,CAACU,EAAE,GAEHC,UAAU,CAAC,MAAM;MACbP,QAAQ,CAAC,YAAY,CAAC;IAC1B,CAAC,CAAC,gBAEFT,OAAA;MAAKiB,SAAS,EAAC,gBAAgB;MAAAH,QAAA,eAC3Bd,OAAA;QAAMiB,SAAS,EAAC,cAAc;QAACC,MAAM,EAAC,MAAM;QAAAJ,QAAA,gBACxCd,OAAA;UAAOmB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,UAAU;UAACH,SAAS,EAAC,OAAO;UAACI,IAAI,EAAC,UAAU;UAACC,QAAQ,EAAEd;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACrG1B,OAAA;UAAOmB,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,SAAS;UAACH,SAAS,EAAC,OAAO;UAACI,IAAI,EAAC,UAAU;UAACC,QAAQ,EAAEd;QAAa;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACxG1B,OAAA;UAAGiB,SAAS,EAAC,YAAY;UAAAH,QAAA,EAAEP;QAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACrC1B,OAAA;UAAGiB,SAAS,EAAC,aAAa;UAACU,OAAO,EAAEhB,WAAY;UAAAG,QAAA,EAAC;QAAQ;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAC1D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL,iBAEf;AACP,CAAC;AAAAtB,EAAA,CA3BKD,QAAQ;EAAA,QACqCN,gBAAgB,EAChDD,WAAW,EACTD,WAAW;AAAA;AAAAiC,EAAA,GAH1BzB,QAAQ;AA6Bd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}