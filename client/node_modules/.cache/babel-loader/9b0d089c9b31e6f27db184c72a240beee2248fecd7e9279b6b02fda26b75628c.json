{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// User State\nconst initialState = {\n  mangaList: [],\n  serverURL: process.env.REACT_APP_SERVER_URL,\n  loading: false,\n  error: \"\"\n};\nexport const getMangaList = createAsyncThunk('manga/getMangaList', userID => {\n  return axios.get(`${initialState.serverURL}/manga/${userID}`).then(res => {\n    console.log(res.data);\n    return res.data;\n  });\n});\nconst mangaSlice = createSlice({\n  name: \"manga\",\n  initialState,\n  reducers: {\n    changeTitle: state => {\n      state.title = \"Test\";\n    },\n    changeTotalChapters: state => {\n      state.totalChapters = 10;\n      console.log(state);\n    },\n    changeCurrentChapter: state => {\n      state.currentChapter = 1;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMangaList.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getMangaList.fulfilled, (state, action) => {\n      state.loading = false;\n      state.mangaList = action.payload.mangaList;\n      state.error = '';\n    });\n    builder.addCase(getMangaList.rejected, (state, action) => {\n      state.loading = false;\n      state.mangaList = [];\n      state.error = action.error.message;\n    });\n  }\n});\n\n// console.log(viewSlice)\n\nexport const {\n  changeTitle,\n  changeTotalChapters,\n  changeCurrentChapter\n} = mangaSlice.actions;\nexport default mangaSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","mangaList","serverURL","process","env","REACT_APP_SERVER_URL","loading","error","getMangaList","userID","get","then","res","console","log","data","mangaSlice","name","reducers","changeTitle","state","title","changeTotalChapters","totalChapters","changeCurrentChapter","currentChapter","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","message","actions","reducer"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/features/manga/mangaSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// User State\r\nconst initialState = {\r\n    mangaList: [],\r\n    serverURL: process.env.REACT_APP_SERVER_URL,\r\n    loading: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const getMangaList = createAsyncThunk('manga/getMangaList', (userID) =>{\r\n    return axios.get(`${initialState.serverURL}/manga/${userID}`)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        return res.data})\r\n})\r\n\r\nconst mangaSlice = createSlice({\r\n    name: \"manga\",\r\n    initialState,\r\n    reducers: {\r\n        changeTitle: (state) => {\r\n            state.title = \"Test\"\r\n        },\r\n        changeTotalChapters: (state) => {\r\n            state.totalChapters = 10;\r\n            console.log(state)\r\n        },\r\n        changeCurrentChapter: (state) => {\r\n            state.currentChapter = 1;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getMangaList.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getMangaList.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state.mangaList = action.payload.mangaList\r\n            state.error = ''\r\n        })\r\n        builder.addCase(getMangaList.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.mangaList = []\r\n            state.error = action.error.message\r\n        })\r\n    }\r\n})\r\n\r\n// console.log(viewSlice)\r\n\r\nexport const {changeTitle, changeTotalChapters, changeCurrentChapter} = mangaSlice.actions;\r\nexport default mangaSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,SAAS,EAAEC,OAAO,CAACC,GAAG,CAACC,oBAAoB;EAC3CC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGX,gBAAgB,CAAC,oBAAoB,EAAGY,MAAM,IAAI;EAC1E,OAAOV,KAAK,CAACW,GAAG,CAAE,GAAEV,YAAY,CAACE,SAAU,UAASO,MAAO,EAAC,CAAC,CAC5DE,IAAI,CAACC,GAAG,IAAI;IACTC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAAC;IACrB,OAAOH,GAAG,CAACG,IAAI;EAAA,CAAC,CAAC;AACzB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGlB,WAAW,CAAC;EAC3BmB,IAAI,EAAE,OAAO;EACbjB,YAAY;EACZkB,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACC,KAAK,GAAG,MAAM;IACxB,CAAC;IACDC,mBAAmB,EAAGF,KAAK,IAAK;MAC5BA,KAAK,CAACG,aAAa,GAAG,EAAE;MACxBV,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACtB,CAAC;IACDI,oBAAoB,EAAGJ,KAAK,IAAK;MAC7BA,KAAK,CAACK,cAAc,GAAG,CAAC;IAC5B;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACpB,YAAY,CAACqB,OAAO,EAAGT,KAAK,IAAK;MAC7CA,KAAK,CAACd,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFqB,OAAO,CAACC,OAAO,CAACpB,YAAY,CAACsB,SAAS,EAAE,CAACV,KAAK,EAAEW,MAAM,KAAK;MACvDX,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACnB,SAAS,GAAG8B,MAAM,CAACC,OAAO,CAAC/B,SAAS;MAC1CmB,KAAK,CAACb,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;IACFoB,OAAO,CAACC,OAAO,CAACpB,YAAY,CAACyB,QAAQ,EAAE,CAACb,KAAK,EAAEW,MAAM,KAAK;MACtDX,KAAK,CAACd,OAAO,GAAG,KAAK;MACrBc,KAAK,CAACnB,SAAS,GAAG,EAAE;MACpBmB,KAAK,CAACb,KAAK,GAAGwB,MAAM,CAACxB,KAAK,CAAC2B,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAM;EAACf,WAAW;EAAEG,mBAAmB;EAAEE;AAAoB,CAAC,GAAGR,UAAU,CAACmB,OAAO;AAC1F,eAAenB,UAAU,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}