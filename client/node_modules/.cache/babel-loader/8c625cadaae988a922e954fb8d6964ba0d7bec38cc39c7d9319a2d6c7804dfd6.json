{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = [{\n  title: \"\",\n  image: \"\",\n  totalChapters: 0,\n  currentChapter: 0,\n  loading: false\n}];\nexport const getMangaList = createAsyncThunk('manga/getMangaList', () => {\n  fetch(\"http://localhost:8000/manga/\").then(res => console.log(\"response\", res.data));\n});\nconst mangaSlice = createSlice({\n  name: \"manga\",\n  initialState,\n  reducers: {\n    changeTitle: state => {\n      state.title = \"Test\";\n    },\n    changeTotalChapters: state => {\n      state.totalChapters = 10;\n      console.log(state);\n    },\n    changeCurrentChapter: state => {\n      state.currentChapter = 1;\n    },\n    getMangaList: state => {\n      var mangaList;\n      fetch(\"http://localhost:8000/manga/\").then(res => res.json()).then(data => mangaList = data);\n      setTimeout(() => {\n        console.log(mangaList);\n        state = mangaList;\n        console.log(\"State: \", state);\n      }, 1000);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getMangaList.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getMangaList.fulfilled, (state, action) => {\n      state.loading = false;\n    });\n  }\n});\n\n// console.log(viewSlice)\n\nexport const {\n  changeTitle,\n  changeTotalChapters,\n  changeCurrentChapter\n} = mangaSlice.actions;\nexport default mangaSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","title","image","totalChapters","currentChapter","loading","getMangaList","fetch","then","res","console","log","data","mangaSlice","name","reducers","changeTitle","state","changeTotalChapters","changeCurrentChapter","mangaList","json","setTimeout","extraReducers","builder","addCase","pending","fulfilled","action","actions","reducer"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/features/manga/mangaSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [{\r\n    title: \"\",\r\n    image: \"\",\r\n    totalChapters: 0,\r\n    currentChapter: 0,\r\n    loading: false,\r\n}]\r\n\r\nexport const getMangaList = createAsyncThunk('manga/getMangaList', () =>{\r\n    fetch(\"http://localhost:8000/manga/\")\r\n    .then(res => console.log(\"response\", res.data))\r\n})\r\n\r\nconst mangaSlice = createSlice({\r\n    name: \"manga\",\r\n    initialState,\r\n    reducers: {\r\n        changeTitle: (state) => {\r\n            state.title = \"Test\"\r\n        },\r\n        changeTotalChapters: (state) => {\r\n            state.totalChapters = 10;\r\n            console.log(state)\r\n        },\r\n        changeCurrentChapter: (state) => {\r\n            state.currentChapter = 1;\r\n        },\r\n        getMangaList: (state) => {\r\n            var mangaList\r\n            fetch(\"http://localhost:8000/manga/\")\r\n            .then(res => res.json())\r\n            .then(data => mangaList = data)\r\n            setTimeout(() => {\r\n                console.log(mangaList)\r\n                state = mangaList\r\n                console.log(\"State: \", state)\r\n            }, 1000);\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getMangaList.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getMangaList.fulfilled, (state, action) => {\r\n            state.loading = false\r\n        })\r\n    }\r\n})\r\n\r\n// console.log(viewSlice)\r\n\r\nexport const {changeTitle, changeTotalChapters, changeCurrentChapter} = mangaSlice.actions;\r\nexport default mangaSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG,CAAC;EAClBC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,CAAC;EAChBC,cAAc,EAAE,CAAC;EACjBC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGR,gBAAgB,CAAC,oBAAoB,EAAE,MAAK;EACpES,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAACG,IAAI,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGd,WAAW,CAAC;EAC3Be,IAAI,EAAE,OAAO;EACbd,YAAY;EACZe,QAAQ,EAAE;IACNC,WAAW,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAAChB,KAAK,GAAG,MAAM;IACxB,CAAC;IACDiB,mBAAmB,EAAGD,KAAK,IAAK;MAC5BA,KAAK,CAACd,aAAa,GAAG,EAAE;MACxBO,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACtB,CAAC;IACDE,oBAAoB,EAAGF,KAAK,IAAK;MAC7BA,KAAK,CAACb,cAAc,GAAG,CAAC;IAC5B,CAAC;IACDE,YAAY,EAAGW,KAAK,IAAK;MACrB,IAAIG,SAAS;MACbb,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACY,IAAI,EAAE,CAAC,CACvBb,IAAI,CAACI,IAAI,IAAIQ,SAAS,GAAGR,IAAI,CAAC;MAC/BU,UAAU,CAAC,MAAM;QACbZ,OAAO,CAACC,GAAG,CAACS,SAAS,CAAC;QACtBH,KAAK,GAAGG,SAAS;QACjBV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEM,KAAK,CAAC;MACjC,CAAC,EAAE,IAAI,CAAC;IACZ;EACJ,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACnB,YAAY,CAACoB,OAAO,EAAGT,KAAK,IAAK;MAC7CA,KAAK,CAACZ,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFmB,OAAO,CAACC,OAAO,CAACnB,YAAY,CAACqB,SAAS,EAAE,CAACV,KAAK,EAAEW,MAAM,KAAK;MACvDX,KAAK,CAACZ,OAAO,GAAG,KAAK;IACzB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAM;EAACW,WAAW;EAAEE,mBAAmB;EAAEC;AAAoB,CAAC,GAAGN,UAAU,CAACgB,OAAO;AAC1F,eAAehB,UAAU,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}