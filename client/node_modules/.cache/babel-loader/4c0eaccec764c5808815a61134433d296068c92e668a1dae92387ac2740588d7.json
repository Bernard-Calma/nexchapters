{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  mangaList: [],\n  loading: false,\n  error: \"\"\n};\nexport const getMangaList = createAsyncThunk('manga/getMangaList', () => {\n  fetch(\"http://localhost:8000/manga/\").then(res => console.log(\"response\", res.data));\n});\nconst mangaSlice = createSlice({\n  name: \"manga\",\n  initialState,\n  // reducers: {\n  //     changeTitle: (state) => {\n  //         state.title = \"Test\"\n  //     },\n  //     changeTotalChapters: (state) => {\n  //         state.totalChapters = 10;\n  //         console.log(state)\n  //     },\n  //     changeCurrentChapter: (state) => {\n  //         state.currentChapter = 1;\n  //     },\n  //     getMangaList: (state) => {\n  //         var mangaList\n  //         fetch(\"http://localhost:8000/manga/\")\n  //         .then(res => res.json())\n  //         .then(data => mangaList = data)\n  //         setTimeout(() => {\n  //             console.log(mangaList)\n  //             state = mangaList\n  //             console.log(\"State: \", state)\n  //         }, 1000);\n  //     }\n  // },\n  extraReducers: builder => {\n    builder.addCase(getMangaList.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(getMangaList.fulfilled, (state, action) => {\n      state.loading = false;\n      state = action.payload;\n      state.error = '';\n    });\n    builder.addCase(getMangaList.rejected, (state, action) => {\n      state.loading = false;\n      state.mangaList = [];\n      state.error = action.error.message;\n    });\n  }\n});\n\n// console.log(viewSlice)\n\nexport const {\n  changeTitle,\n  changeTotalChapters,\n  changeCurrentChapter\n} = mangaSlice.actions;\nexport default mangaSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","mangaList","loading","error","getMangaList","fetch","then","res","console","log","data","mangaSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","changeTitle","changeTotalChapters","changeCurrentChapter","actions","reducer"],"sources":["C:/Users/-/Documents/Projects/nexchapters/src/features/manga/mangaSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    mangaList: [],\r\n    loading: false,\r\n    error: \"\"\r\n}\r\n\r\nexport const getMangaList = createAsyncThunk('manga/getMangaList', () =>{\r\n    fetch(\"http://localhost:8000/manga/\")\r\n    .then(res => console.log(\"response\", res.data))\r\n})\r\n\r\nconst mangaSlice = createSlice({\r\n    name: \"manga\",\r\n    initialState,\r\n    // reducers: {\r\n    //     changeTitle: (state) => {\r\n    //         state.title = \"Test\"\r\n    //     },\r\n    //     changeTotalChapters: (state) => {\r\n    //         state.totalChapters = 10;\r\n    //         console.log(state)\r\n    //     },\r\n    //     changeCurrentChapter: (state) => {\r\n    //         state.currentChapter = 1;\r\n    //     },\r\n    //     getMangaList: (state) => {\r\n    //         var mangaList\r\n    //         fetch(\"http://localhost:8000/manga/\")\r\n    //         .then(res => res.json())\r\n    //         .then(data => mangaList = data)\r\n    //         setTimeout(() => {\r\n    //             console.log(mangaList)\r\n    //             state = mangaList\r\n    //             console.log(\"State: \", state)\r\n    //         }, 1000);\r\n    //     }\r\n    // },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(getMangaList.pending, (state) => {\r\n            state.loading = true\r\n        })\r\n        builder.addCase(getMangaList.fulfilled, (state, action) => {\r\n            state.loading = false\r\n            state = action.payload\r\n            state.error = ''\r\n        })\r\n        builder.addCase(getMangaList.rejected, (state, action) => {\r\n            state.loading = false\r\n            state.mangaList = []\r\n            state.error = action.error.message\r\n        })\r\n    }\r\n})\r\n\r\n// console.log(viewSlice)\r\n\r\nexport const {changeTitle, changeTotalChapters, changeCurrentChapter} = mangaSlice.actions;\r\nexport default mangaSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,oBAAoB,EAAE,MAAK;EACpEO,KAAK,CAAC,8BAA8B,CAAC,CACpCC,IAAI,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,GAAG,CAACG,IAAI,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGZ,WAAW,CAAC;EAC3Ba,IAAI,EAAE,OAAO;EACbZ,YAAY;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAa,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACX,YAAY,CAACY,OAAO,EAAGC,KAAK,IAAK;MAC7CA,KAAK,CAACf,OAAO,GAAG,IAAI;IACxB,CAAC,CAAC;IACFY,OAAO,CAACC,OAAO,CAACX,YAAY,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,GAAGE,MAAM,CAACC,OAAO;MACtBH,KAAK,CAACd,KAAK,GAAG,EAAE;IACpB,CAAC,CAAC;IACFW,OAAO,CAACC,OAAO,CAACX,YAAY,CAACiB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACtDF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAAChB,SAAS,GAAG,EAAE;MACpBgB,KAAK,CAACd,KAAK,GAAGgB,MAAM,CAAChB,KAAK,CAACmB,OAAO;IACtC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;;AAEF;;AAEA,OAAO,MAAM;EAACC,WAAW;EAAEC,mBAAmB;EAAEC;AAAoB,CAAC,GAAGd,UAAU,CAACe,OAAO;AAC1F,eAAef,UAAU,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}